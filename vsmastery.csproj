<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    
    <AssemblyTitle>vsmastery</AssemblyTitle>
    <Authors>islasa1</Authors>
    <Version>0.0.1</Version>
    
    <Description>Vintage Story Mod for realistic mastery of skills and professions</Description>
    <RepositoryUrl>https://github.com/islasa1/vsmastery</RepositoryUrl>
    
    <TargetFramework>net461</TargetFramework>
    <LangVersion>latest</LangVersion>
    
  </PropertyGroup>
  <ItemGroup>
    
    <Reference Include="VintagestoryAPI">
      <HintPath>$(VINTAGE_STORY)/VintagestoryAPI.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="VSEssentials">
      <HintPath>$(VINTAGE_STORY)/Mods/VSEssentials.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="VSSurvivalMod">
      <HintPath>$(VINTAGE_STORY)/Mods/VSSurvivalMod.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="cairo-sharp">
      <HintPath>$(VINTAGE_STORY)/Lib/cairo-sharp.dll</HintPath>
      <Private>false</Private>
    </Reference>
    <Reference Include="protobuf-net">
      <HintPath>$(VINTAGE_STORY)/Lib/protobuf-net.dll</HintPath>
      <Private>false</Private>
    </Reference>
  </ItemGroup>
  
  <ItemGroup Condition="'$(Configuration)' == 'Debug'">
    <None Include="modinfo.json" CopyToOutputDirectory="PreserveNewest" />
    <None Include="LICENSE" CopyToOutputDirectory="PreserveNewest" />
    <None Include="resources/**">
      <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>


  <ItemGroup Condition="'$(Configuration)' == 'Release'">
    <None Include="modinfo.json" CopyToOutputDirectory="PreserveNewest" />
    <None Include="LICENSE" CopyToOutputDirectory="PreserveNewest" />
    <None Include="resources/**">
      <Link>%(RecursiveDir)%(Filename)%(Extension)</Link>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
  
  <Target Name="Package" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release'">
    <ZipDirectory DestinationFile="bin/$(TargetName).zip" SourceDirectory="$(TargetDir)" Overwrite="true" />
  </Target>
</Project>